#!/bin/bash

PYTHON_VERSION=$(python -c 'import sys; print(sys.version_info[0])' | tr -d "'")
if [ "$PYTHON_VERSION" -eq 2 ]
then
  exit 0
fi
HOME_DIR=/test/benchmark
BIN_DIR=${HOME_DIR}/bin
LOG_DIR=${HOME_DIR}/logs

python -c "import sys;
assert sys.version_info < (3, 7);"
PYTHON_VERSION_CHECK=`echo $?`

set -e
rm -rf $BIN_DIR/pytorch
git clone https://github.com/pytorch/pytorch.git --branch v2.0.0 --single-branch --depth 1  $BIN_DIR/pytorch


pip install -U numpy
pip install gitpython
pip install tabulate==0.9.0
pip install deepspeed==0.8.2
pip install pyyaml

curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
apt-get install git-lfs

mamba install -y expecttest libglib pango

git clone --recursive https://github.com/YuchengT/benchmark.git $BIN_DIR/benchmark
cd $BIN_DIR/benchmark
python install.py

if [ "$1" = "p3.2xlarge" ]
then
    sed -i "s/extra_args = \[\]/&\n        batch_size = int(batch_size \/ 4) if (batch_size is not None and batch_size >= 4) else 1/g" $BIN_DIR/pytorch/benchmarks/dynamo/torchbench.py
elif [ "$1" = "g4dn.4xlarge" ]
then
    sed -i "s/extra_args = \[\]/&\n        batch_size = int(batch_size \/ 4) if (batch_size is not None and batch_size >= 4) else 1/g" $BIN_DIR/pytorch/benchmarks/dynamo/torchbench.py
elif [ "$1" = "g5.4xlarge" ]
then
    sed -i "s/extra_args = \[\]/&\n        batch_size = int(batch_size \/ 2) if (batch_size is not None and batch_size >= 2) else 1/g" $BIN_DIR/pytorch/benchmarks/dynamo/torchbench.py
else
    echo "No need to adjust batch size since we are using p4d.24xlarge."
fi

cd $BIN_DIR/pytorch

python benchmarks/dynamo/runner.py --training --suites=torchbench --dtypes=amp --compilers=inductor --output-dir=torchbench_logs --extra-args='--output-directory=./'

aws s3 cp $BIN_DIR/pytorch/torchbench_logs/ $2/ --recursive

exit 0